<script src="http://cdn.alloyui.com/3.0.1/aui/aui-min.js"></script>
<h3><?php var_dump($this->_vars); ?></h3>
<input type="hidden" id="uniAclConfig" value='<?php echo json_encode($this->uniAclConfig); ?>'>
<input type="hidden" id="userActionOnRole" value='<?php echo json_encode($this->userActionOnRole); ?>'>
<input type="hidden" id="guest" value='<?php echo json_encode($this->guest); ?>'>
<input type="hidden" id="admin" value='<?php echo json_encode($this->admin); ?>'>
<input type="hidden" id="editor" value='<?php echo json_encode($this->editor); ?>'>
<!-- CONTROLLER !-->
<div id="controller">CONTROLLER</div>
<div id="myTreeView"></div>

<div id="f">
    <ul id="role"></ul>
</div>
<li id="sampleRoleRow" style="display: none;">
    <input type="text" readonly name="inheritRole">
    <input type="text" readonly name="parentRole">
    <button class="btn btn-primary allowedAction" data-container="body" data-toggle="tooltip"
            data-placement="right">action
    </button>
</li>

<button class="btn btn-default" data-container="body" data-toggle="popover" data-placement="bottom">Popover on bottom
</button>

<div id="mapRoleControllerAction">
    <h2>map role controller action</h2>
    <div id="adminControllerAction"></div>
</div>

<button id="scan" class="btn btn-primary">scan</button>

<script>
    (function($){
        $(document).ready(function(){
            const CONTROLLER_ACTION = "CONTROLLER_ACTION";
            const ROLE = "ROLE";
            /**
             * READ CONFIG from server
             */
            var uniAclConfig = JSON.parse($("#uniAclConfig").val());
            var userActionOnRole = JSON.parse($("#userActionOnRole").val());
//            var userActionOnRole = ["view", "edit", "add", "delete"];
            console.log(uniAclConfig);
            console.log(userActionOnRole);

            /**
             * VIEW on CONTROLLER
             */
            var controllerAction = uniAclConfig[CONTROLLER_ACTION];
            var auiTreeData = buildTreeData(controllerAction);
            renderTree(auiTreeData, "#myTreeView");

            /**
             * load ROLE
             */
            var role = uniAclConfig[ROLE];
            var roleDiv = $("#role");

            var sampleRoleRow = $("#sampleRoleRow");
            for(var inheritRole in role){
                if(role.hasOwnProperty(inheritRole)){
                    var row = sampleRoleRow.clone();
                    row.css({display: 'block'});
                    row.find("input[name='inheritRole']").val(inheritRole);
                    row.find("input[name='parentRole']").val(role[inheritRole]);

                    roleDiv.append(row);
                }
            }

            /**
             * action user can
             */
            var actionDiv = $("<div>");
            var sampleIcon = $("<span class='glyphicon'></span>");
            for(var key in userActionOnRole){
                if(userActionOnRole.hasOwnProperty(key)){
                    var action = userActionOnRole[key];
                    var icon = sampleIcon.clone();
                    switch(action){
                        case "edit":
                            icon.addClass("glyphicon-pencil");
                            break;
                        case "add":
                            icon.addClass("glyphicon-plus");
                            break;
                        case "delete":
                            icon.addClass("glyphicon-trash");
                            break;
                        default:
                            break;
                    }
                    actionDiv.append(icon);
                }
            }
            $(".allowedAction").tooltip({
                html: true,
                title: actionDiv
            });
            /**
             * map role scontroller
             */
            const MAP_ROLE_CONTROLLER_ACTION = "MAP_ROLE_CONTROLLER_ACTION";
//            var mapRoleController = uniAclConfig[MAP_ROLE_CONTROLLER_ACTION];
            var mapDiv = $("#mapRoleControllerAction");
            var guest = JSON.parse($("#guest").val());
            var admin = JSON.parse($("#admin").val());
            var adminTreeData = buildTreeData(admin);
            renderTree(adminTreeData, "#adminControllerAction");

            $("#scan").on("click", function(){
                var ul = $("#adminControllerAction").children("ul");
                var treeData = {};
                getTreeData(ul, treeData);
                console.log(treeData);
            });
        });
    })(jQuery);

    function buildTreeData(controllerAction){
        var treeData = [];
        for(var controller in controllerAction){
            if(controllerAction.hasOwnProperty(controller)){
                var actionData = [];
                //build each controller as node
                treeData.push({
                    children: actionData,
                    expanded: true,
                    label: controller,
                    type: 'task',
                    checked: true
                });

                //build actionData, into controller as child-node
                var actionArray = controllerAction[controller];
                for(var i = 0; i < actionArray.length; i++){
                    actionData.push({
                        label: actionArray[i],
                        leaf: true,
                        type: 'task',
                        checked: true
                    })
                }
            }
        }
        return treeData;
    }

    function getTreeData(ul, store){
        var liArray = ul.children("li");
        /** @warn for each not work as expected of recursive*/
        for(var i = 0; i < liArray.length; i++){
            var li = $(liArray[i]);
            var contentDiv = li.children("div");
            var containerUl = li.children("ul");
            if(contentDiv.hasClass("tree-node-checked")){
                var label = contentDiv.children(".tree-label").html();
//                console.log(label);
                /** @warn handle different on controller|action */
                if(containerUl.children("li").length > 0){
                    store[label] = [];
                    getTreeData(containerUl, store[label]);
                }else{
                    store.push(label);
                }

            }
        }
    }

    function renderTree(treeData, containerDivId){
        YUI().use('aui-tree-view', function(Y){
                new Y.TreeView({boundingBox: containerDivId, children: treeData}).render();
            }
        );
    }
</script>

