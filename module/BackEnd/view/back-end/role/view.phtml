<script src="http://cdn.alloyui.com/3.0.1/aui/aui-min.js"></script>
<script src="/js/JSON.prune.js"></script>
<h3><?php var_dump($this->_vars); ?></h3>
<input type="hidden" id="uniAclConfig" value='<?php echo json_encode($this->uniAclConfig); ?>'>
<input type="hidden" id="userActionOnRole" value='<?php echo json_encode($this->userActionOnRole); ?>'>
<input type="hidden" id="inheritRole" value='<?php echo json_encode($this->inheritRole); ?>'>
<input type="hidden" id="allRoles" value='<?php echo json_encode($this->allRoles); ?>'>
<input type="hidden" id="allControllerAction" value='<?php echo json_encode($this->allControllerAction); ?>'>
<input type="hidden" id="mapRoleWhere" value='<?php echo json_encode($this->mapRoleWhere); ?>'>

<li id="sampleRoleRow" style="display: none;">
    <input type="text" readonly name="inheritRole">
    <input type="text" readonly name="parentRole">
    <button class="btn btn-primary allowedAction" data-container="body" data-toggle="tooltip"
            data-placement="right">action
    </button>
</li>

<div class="row">
    <div class="col-md-8">
        <div class="panel-group" id="panelParent">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title" data-parent="#panelParent" data-toggle="collapse" href="#rolePanelBody">
                        role
                    </div>
                </div>
                <div id="rolePanelBody" class="panel-collapse collapse">
                    <div class="panel-body">
                        <p>hien thi thong tin ve inherit-role</p>
                        <div id="inheritRoleShow"></div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title" data-parent="#panelParent" data-toggle="collapse" href="#mapPanelBody">map
                        role where
                    </div>
                </div>
                <div id="mapPanelBody" class="panel-collapse collapse">
                    <div class="panel-body">
                        <p>common</p>
                        <p>special (no inherit)</p>
                        <div id="mapRoleWhereShow">
                            <div id="selectContainer"></div>
                            <h3>INHERIT</h3>
                            <div id="mapRoleWhereInherit"></div>
                            <h3>NOT INHERIT</h3>
                            <div id="mapRoleWhereNotInherit"></div>
                            <button id="btnMapRoleWhere" class="btn btn-primary">save change</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title" data-parent="#panelParent" data-toggle="collapse" href="#allRolePanelBody">
                        all roles
                    </div>
                </div>
                <div id="allRolePanelBody" class="panel-collapse collapse">
                    <div class="panel-body">
                        <p>hien thi tat cac role</p>
                        <div id="allRolesShow"></div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title" data-parent="#panelParent" data-toggle="collapse"
                         href="#controllerActionPanelBody">controller
                        action
                    </div>
                </div>
                <div id="controllerActionPanelBody" class="panel-collapse collapse">
                    <div class="panel-body">
                        <p>hien thi tat cac controller action</p>
                        <div id="allControllerActionShow"></div>
                        <div id="save"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    (function($){
        $(document).ready(function(){
            const CONTROLLER_ACTION = "CONTROLLER_ACTION";
            const ROLE = "ROLE";
            const INHERIT = "INHERIT";
            const NOT_INHERIT = "NOT_INHERIT";
            /**
             * READ CONFIG from server
             */
//            console.log($("#uniAclConfig").val());
//            var uniAclConfig = JSON.parse($("#uniAclConfig").val());
//            console.log(uniAclConfig);
            var userActionOnRole = JSON.parse($("#userActionOnRole").val());

            var allRoles = JSON.parse($("#allRoles").val());
            /**
             * load ROLE
             */
            var inheritRole = JSON.parse($("#inheritRole").val());
            renderInheritRole(inheritRole, $("#inheritRoleShow"));
            /**
             * map ROLE WHERE
             */
            var mapRoleWhere = JSON.parse($("#mapRoleWhere").val());
            var selectContainer = $("#selectContainer");
            renderAllRoles(allRoles, selectContainer);
            //bind event on select
            selectContainer.children("select").on("change", function(){
                var optionSelected = $(this).children("option:selected");
                var role = optionSelected.val();
                console.log(role);
//                var s = buildTreeData(mapRoleWhere[role][INHERIT]);
//                console.log(s);
                //clean div container treeview
                $("#mapRoleWhereInherit").empty();
                $("#mapRoleWhereNotInherit").empty();
                renderTree(mapRoleWhere[role][INHERIT], "#mapRoleWhereInherit");
                renderTree(mapRoleWhere[role][NOT_INHERIT], "#mapRoleWhereNotInherit");
//                buildObjectToSend();

            });

            /**
             * ALL ROLES
             */
            /** @warn allRoles at first line */
            renderAllRoles(allRoles, $("#allRolesShow"));
            /**
             * ALL CONTROLLER ACTION
             */
            var allControllerAction = JSON.parse($("#allControllerAction").val());
//            console.log(allControllerAction);
            renderTree(allControllerAction, "#allControllerActionShow");
            $("#scan").on("click", function(){
                var ul = $("#adminControllerAction").children("ul");
                var treeData = {};
                getTreeData(ul, treeData);
                console.log(treeData);
            });

            $("#btnMapRoleWhere").on("click", function(){
//                getTreeData()
//                var a = {};
//                console.log($("#mapRoleWhereInherit").children("ul"));
//                getTreeData($("#mapRoleWhereInherit").children("ul"), a);
                var result = buildObjectToSend();
//                console.log(result);
//                var inheritX = result.editor.INHERIT;
//                console.log(inheritX);
//                console.log(JSON.stringify(inheritX));
                /**
                 * ajax push to /admin/role/edit
                 */
                    /** @warn JSON stringify not work on DEEP object */
//                var x = result.editor[0];
//                console.log(JSON.stringify(x));
                var resultJsonString = JSON.stringify(result);
                console.log(resultJsonString);
                var formData = new FormData();
                formData.append("userAction", "edit");
                formData.append("data", resultJsonString);
                var oReq = new XMLHttpRequest();
                var url = "/admin/role/edit";
                oReq.open("post", url);
                oReq.send(formData);
                oReq.onload = function(e){
                    var res = oReq.response;
                    console.log(res);
//                    var resJsonObj = JSON.parse(res);
//                    console.log(resJsonObj);
//                    console.log(resJsonObj.info);
//                    var data = JSON.parse(resJsonObj.info);
//                    console.log(resJsonObj);
                };
            });
        });
    })(jQuery);

    function buildTreeData(controllerAction){
        var treeData = [];
        for(var controller in controllerAction){
            if(controllerAction.hasOwnProperty(controller)){
                var actionData = [];
                //build each controller as node
                treeData.push({
                    children: actionData,
                    expanded: true,
                    label: controller,
                    type: 'task',
                    checked: true
                });

                //build actionData, into controller as child-node
                var actionArray = controllerAction[controller];
                for(var i = 0; i < actionArray.length; i++){
                    actionData.push({
                        label: actionArray[i],
                        leaf: true,
                        type: 'task',
                        checked: true
                    })
                }
            }
        }
        return treeData;
    }

    function getTreeData(ul, store){
        var liArray = ul.children("li");
        /** @warn for each not work as expected of recursive*/
        for(var i = 0; i < liArray.length; i++){
            var li = $(liArray[i]);
            var contentDiv = li.children("div");
            var containerUl = li.children("ul");
            if(contentDiv.hasClass("tree-node-checked")){
                var label = contentDiv.children(".tree-label").html();
//                console.log(label);
                /** @warn handle different on controller|action */
                if(containerUl.children("li").length > 0){
                    store[label] = [];
                    getTreeData(containerUl, store[label]);
                }else{
                    store.push(label);
                }

            }
        }
    }

    function renderTree(controllerAction, containerDivId){
        var treeData = buildTreeData(controllerAction);
        YUI().use('aui-tree-view', function(Y){
                new Y.TreeView({boundingBox: containerDivId, children: treeData}).render();
            }
        );
    }

    function renderInheritRole(inheritRole, containerDiv){
        var sampleRoleRow = $("#sampleRoleRow");
        for(var inherit in inheritRole){
            if(inheritRole.hasOwnProperty(inherit)){
                var row = sampleRoleRow.clone();
                row.css({display: 'block'});
                row.find("input[name='inheritRole']").val(inherit);
                row.find("input[name='parentRole']").val(inheritRole[inherit]);
                containerDiv.append(row);
            }
        }
    }
    //    function init(){
    //        var title = actionDiv();
    //        $('[data-toggle="tooltip"]').tooltip({
    //            html: true
    //            title: title
    //        });
    //    }

    //    function actionDiv(userActionRole){
    //        /**
    //         * action user can
    //         */
    //        var actionDiv = $("<div>");
    //        var sampleIcon = $("<span class='glyphicon'></span>");
    //        for(var key in userActionOnRole){
    //            if(userActionOnRole.hasOwnProperty(key)){
    //                var action = userActionOnRole[key];
    //                var icon = sampleIcon.clone();
    //                switch(action){
    //                    case "edit":
    //                        icon.addClass("glyphicon-pencil");
    //                        break;
    //                    case "add":
    //                        icon.addClass("glyphicon-plus");
    //                        break;
    //                    case "delete":
    //                        icon.addClass("glyphicon-trash");
    //                        break;
    //                    default:
    //                        break;
    //                }
    //                actionDiv.append(icon);
    //            }
    //        }
    //        return actionDiv;
    //    }

    function renderAllRoles(allRoles, containerDiv){
//            <select class="selectpicker">
//                <option>Mustard</option>
//                <option>Ketchup</option>
//                <option>Relish</option>
//            </select>
        var select = $('<select class="selectpicker">');
        var optionSample = $("<option>");
        //when loop for i++, means key just number
        //sometimes key in array like php has info
        //for(var key in array){ do sth}
        for(var i = 0; i < allRoles.length; i++){
            var option = optionSample.clone();
            option.html(allRoles[i]);
            select.append(option);
        }
        containerDiv.append(select);
    }

    function renderRoleWhere(){
        /**
         * CONTROLLER ACTION
         */

        /**
         * SPECIAL, not inherit
         */
    }

    function buildObjectToSend(){
        var result = {};
        var mapRoleWhereInherit = {};
        getTreeData($("#mapRoleWhereInherit").children("ul"), mapRoleWhereInherit);
//        console.log(mapRoleWhereInherit);
        var mapRoleWhereNotInherit = {};
        getTreeData($("#mapRoleWhereNotInherit").children("ul"), mapRoleWhereNotInherit);

        var selectDiv = $("#selectContainer").find("select");
        /** explicit try on first child */
        if(selectDiv.length > 0){
            selectDiv = $(selectDiv[0]);
        }
//        console.log(selectDiv);
//        var sO = selectDiv.find("option:selected").val();
//        console.log(sO);

//        result[sO] = [];
//        /** @warn INHERT/NOT_INHERIT is not define */
//        result[sO]["INHERIT"] = mapRoleWhereInherit;
//        result[sO]["NOT_INHERIT"] = mapRoleWhereInherit;

        result["role"] = selectDiv.find("option:selected").val();
        result["inherit"] = mapRoleWhereInherit;
        result["notInherit"] = mapRoleWhereNotInherit;

//        console.log(result);
        return result;
    }
</script>

